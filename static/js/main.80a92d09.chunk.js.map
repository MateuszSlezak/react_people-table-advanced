{"version":3,"sources":["components/PersonLink.tsx","components/PeopleItem.tsx","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleTable.tsx","api.ts","components/Loader/Loader.tsx","components/PeopleFilters.tsx","components/PeoplePage.tsx","components/getPreparedUsers.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["PersonLink","person","personName","useSearchParams","searchParameters","to","slug","toString","className","cn","sex","replace","name","PeopleItem","currLocationLink","useLocation","pathname","includes","born","died","mother","motherName","father","fatherName","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","searchParams","search","tableSortHeaders","PeopleTable","people","sort","get","order","map","header","toLowerCase","user","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","peoplesAge","PeopleFilters","setSearchParameters","query","centuries","getAll","setSearchWith","useCallback","type","placeholder","onChange","event","target","century","filter","item","length","PeoplePage","useState","loading","setLoading","users","setUsers","error","setError","useEffect","getPeople","catch","finally","usersWithParents","useMemo","newUser","find","preparedUsers","sexPar","queryPar","centuriesPar","sortPar","orderPar","peoples","newPeoples","normQuery","centuryFilteredPeoples","cent","push","some","human","a","b","localeCompare","getPreparedUsers","Navbar","activeClass","isActive","classNames","role","App","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.80a92d09.chunk.js","sourcesContent":["import { Link, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport React from 'react';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  person: Person | undefined,\n  personName: string | null,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, personName }) => {\n  const [searchParameters] = useSearchParams();\n\n  return (\n    person ? (\n      <Link\n        to={`/people/${person.slug}?${searchParameters.toString()}`}\n        className={cn({\n          'has-text-danger': person.sex === 'f',\n        })}\n        replace\n      >\n        {person.name}\n      </Link>\n    ) : (\n      <>\n        {personName || '-'}\n      </>\n    )\n  );\n};\n","import { useLocation } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types/Person';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PeopleItem: React.FC<Props> = ({ person }) => {\n  const { pathname: currLocationLink } = useLocation();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': currLocationLink.includes(`/people/${person.slug}`),\n      })}\n    >\n      <td>\n        <PersonLink person={person} personName={person.name} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        <PersonLink person={person.mother} personName={person.motherName} />\n      </td>\n      <td>\n        <PersonLink person={person.father} personName={person.fatherName} />\n      </td>\n    </tr>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { PeopleItem } from './PeopleItem';\nimport { Person } from '../types/Person';\nimport { SearchLink } from './SearchLink';\n\nexport type Props = {\n  people: Person[],\n};\n\nconst tableSortHeaders = [\n  'Name',\n  'Sex',\n  'Born',\n  'Died',\n];\n\nexport const PeopleTable = ({ people }: Props) => {\n  const [searchParameters] = useSearchParams();\n\n  const sort = searchParameters.get('sort') || '';\n  const order = searchParameters.get('order') || '';\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {tableSortHeaders.map((header) => (\n            <th key={header}>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {header}\n                {(!sort || sort !== header.toLowerCase()) && (\n                  <SearchLink\n                    params={{\n                      sort: header.toLowerCase(),\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className={cn('fas fa-sort')}\n                      />\n                    </span>\n                  </SearchLink>\n                )}\n                {sort === header.toLowerCase() && !order && (\n                  <SearchLink\n                    params={{\n                      sort: header.toLowerCase(),\n                      order: 'desc',\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className={cn('fas fa-sort-up')}\n                      />\n                    </span>\n                  </SearchLink>\n                )}\n                {(order && sort === header.toLowerCase()) && (\n                  <SearchLink\n                    params={{\n                      sort: null,\n                      order: null,\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className={cn('fas fa-sort-down')}\n                      />\n                    </span>\n                  </SearchLink>\n                )}\n              </span>\n            </th>\n          ))}\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Mother\n            </span>\n          </th>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Father\n            </span>\n          </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((user) => (\n          <PeopleItem person={user} key={user.slug} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { SearchLink } from './SearchLink';\nimport { SearchParams, getSearchWith } from '../utils/searchHelper';\n// import { SearchParams, getSearchWith } from '../../utils/searchHelper';\n\nconst peoplesAge = ['16', '17', '18', '19', '20'];\n\nexport const PeopleFilters = () => {\n  const [searchParameters, setSearchParameters] = useSearchParams();\n\n  const sex = searchParameters.get('sex');\n  const query = searchParameters.get('query');\n  const centuries = searchParameters.getAll('centuries');\n\n  const setSearchWith = useCallback(\n    (params: SearchParams) => setSearchParameters(\n      getSearchWith(searchParameters, params),\n    ), [searchParameters],\n  );\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={cn({\n            'is-active': !sex,\n          })}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          className={cn({\n            'is-active': sex === 'm',\n          })}\n          params={{ sex: 'm' }}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          className={cn({\n            'is-active': sex === 'f',\n          })}\n          params={{ sex: 'f' }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query || ''}\n            onChange={event => setSearchWith(\n              { query: event.target.value || null },\n            )}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {peoplesAge.map((century) => (\n              <SearchLink\n                key={century}\n                data-cy=\"century\"\n                className={cn('button mr-1', {\n                  'is-info': centuries.includes(century),\n                })}\n                params={centuries.includes(century)\n                  ? { centuries: centuries.filter((item => item !== century)) }\n                  : { centuries: [...centuries, century] }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={cn('button is-success', {\n                'is-outlined': centuries.length !== 0,\n              })}\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className={cn('button is-link is-outlined is-fullwidth')}\n          params={{ sex: null, query: null, centuries: null }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import {\n  FC, useEffect, useMemo, useState,\n} from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleTable } from './PeopleTable';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\nimport { Loader } from './Loader';\nimport { PeopleFilters } from './PeopleFilters';\nimport { getPreparedUsers } from './getPreparedUsers';\n\nexport const PeoplePage: FC = () => {\n  const [loading, setLoading] = useState(true);\n  const [users, setUsers] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n\n  const [searchParameters] = useSearchParams();\n\n  const sex = searchParameters.get('sex') || '';\n  const query = searchParameters.get('query') || '';\n  const centuries = searchParameters.getAll('centuries') || [];\n  const sort = searchParameters.get('sort') || '';\n  const order = searchParameters.get('order') || '';\n\n  useEffect(() => {\n    getPeople()\n      .then(setUsers)\n      .catch(() => {\n        setError(true);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const usersWithParents = useMemo(() => users.map((user) => {\n    const newUser = { ...user };\n\n    newUser.mother = users.find((person) => person.name === user.motherName);\n    newUser.father = users.find((person) => person.name === user.fatherName);\n\n    return newUser;\n  }), [users]);\n\n  const preparedUsers = useMemo(() => getPreparedUsers({\n    sexPar: sex,\n    queryPar: query,\n    centuriesPar: centuries,\n    sortPar: sort,\n    orderPar: order,\n    peoples: usersWithParents,\n  }), [searchParameters, users]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <>\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              {!loading && !error && users.length > 0 && (\n                <PeopleFilters />\n              )}\n            </div>\n\n            <div className=\"column\">\n              <div className=\"box table-container\">\n                {loading && <Loader />}\n                {!loading && error && (\n                  <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n                )}\n                {preparedUsers.length < 1 && !loading && !error && (\n                  <p>\n                    There are no people matching the current search criteria\n                  </p>\n                )}\n                {usersWithParents.length < 1 && !loading && !error && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n\n                {!loading && !error && preparedUsers.length > 0 && (\n                  <PeopleTable people={preparedUsers} />\n                )}\n              </div>\n            </div>\n          </>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport const getPreparedUsers = ({\n  sexPar,\n  queryPar,\n  centuriesPar,\n  sortPar,\n  orderPar,\n  peoples,\n}: {\n  sexPar: string,\n  queryPar: string,\n  centuriesPar: string[],\n  sortPar: string,\n  orderPar: string,\n  peoples: Person[],\n}): Person[] => {\n  let newPeoples = [...peoples];\n\n  if (sexPar.length > 0) {\n    newPeoples = newPeoples.filter((person) => person.sex === sexPar);\n  }\n\n  if (queryPar.length > 0) {\n    newPeoples = newPeoples.filter((person) => {\n      const normQuery = queryPar.toLowerCase();\n\n      return person.name.toLowerCase().includes(normQuery)\n        || person.motherName?.toLowerCase().includes(normQuery)\n        || person.fatherName?.toLowerCase().includes(normQuery);\n    });\n  }\n\n  if (centuriesPar.length > 0) {\n    const centuryFilteredPeoples: Person[] = [];\n\n    centuriesPar.forEach((cent) => {\n      centuryFilteredPeoples.push(...newPeoples.filter((person) => (\n        person.born < (+cent * 100)\n          && person.born >= (+cent * 100 - 100)\n      )));\n    });\n\n    newPeoples = peoples.filter(person => (\n      centuryFilteredPeoples.some(human => human.name === person.name)\n    ));\n  }\n\n  if (sortPar.length > 0) {\n    switch (sortPar) {\n      case 'name':\n      case 'sex':\n        newPeoples.sort((a, b) => (orderPar\n          ? b[sortPar].localeCompare(a[sortPar])\n          : a[sortPar].localeCompare(b[sortPar])\n        ));\n\n        break;\n      case 'born':\n      case 'died':\n        newPeoples.sort((a, b) => (orderPar\n          ? b[sortPar] - a[sortPar]\n          : a[sortPar] - b[sortPar]\n        ));\n\n        break;\n      default: return newPeoples;\n    }\n  }\n\n  return newPeoples;\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  const activeClass = ({ isActive }: { isActive: boolean }) => {\n    return classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    );\n  };\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={activeClass} to=\"/\">Home</NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={activeClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route path=\"people\" element={<PeoplePage />} />\n            <Route path=\"/people/:peopleSlug\" element={<PeoplePage />} />\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}